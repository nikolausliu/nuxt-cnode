name: Publish And Deploy

on:
  push:
    tags:
      - v*

jobs:
  build-and-deploy:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies 👨🏻‍💻
        run: npm ci

      - name: Run linter 👀
        run: npm run lint

      - name: Run tests 🧪
        run: npm run test

      - run: npm run build
      - run: tar -zcvf release.tgz .nuxt nuxt.config.js package.json package-lock.json ecosystem.config.js

      # 发布 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESSTOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESSTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.tgz
          asset_name: release.tgz
          asset_content_type: application/x-tgz

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ALIYUN_HOST }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}
          port: ${{ secrets.ALIYUN_PORT }}
          script: |
            cd home/niko/nuxt-cnode
            wget https://github.com/nikolausliu/nuxt-cnode/releases/latest/download/release.tgz -O release.tgz
            tar zxvf release.tgz
            nvm use 12.6.0
            npm install --production
            pm2 reload ecosystem.config.js
